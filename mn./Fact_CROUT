function [A] = crout(A)

% toate submatricele lider principale nesingulare, acest algoritm calculeaza factorizarea Crout A = LU.

n=length(A);
L=zeros(size(A));
U=zeros(size(A));
for i=1:n
    A(i,1)=A(i,1); % prima col din L
end
for j=2:n
    A(1,j)=A(1,j)/A(1,1); % prima linie din U
end

for k=2:n
    for i=k:n % urm col din L
        s=0;
        for l=1:k-1
            s=s+A(i,l)*A(l,k);
        end
        A(i,k)=A(i,k)-s;
    end
    if k==n  
        return
    end
    for j=k+1:n % urm linii din U
        s=0;
        for l=1:k-1
            s=s+A(k,l)*A(l,j);
        end
        A(k,j)=(A(k,j)-s)/A(k,k);
    end
end
end
